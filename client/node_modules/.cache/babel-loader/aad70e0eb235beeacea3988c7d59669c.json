{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\murali\\\\Documents\\\\GitHub\\\\react-portfolio-ms1\\\\client\\\\src\\\\pages\\\\SaveBooks.js\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Container } from \"../components/Grid\";\nimport SavedResult from \"../components/SavedResult\";\n\nclass SaveBook extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      savedBooks: []\n    };\n\n    this.handleDeleteButton = id => {\n      API.deleteBook(id).then(res => this.componentDidMount()).catch(err => console.log(err));\n    };\n  }\n\n  //when this component mounts, grab all books that were save to the database \n  componentDidMount() {\n    API.getBooks().then(res => this.setState({\n      savedBooks: res.data\n    })).catch(err => console.log(err));\n  } //function to remove book by id\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SavedResult, {\n      savedBooks: this.state.savedBooks,\n      handleDeleteButton: this.handleDeleteButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default SaveBook;","map":{"version":3,"sources":["C:/Users/murali/Documents/GitHub/react-portfolio-ms1/client/src/pages/SaveBooks.js"],"names":["React","Component","API","Jumbotron","Container","SavedResult","SaveBook","state","savedBooks","handleDeleteButton","id","deleteBook","then","res","componentDidMount","catch","err","console","log","getBooks","setState","data","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,SAAT,QAAyB,oBAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BM,KAD6B,GACrB;AACJC,MAAAA,UAAU,EAAE;AADR,KADqB;;AAAA,SAa7BC,kBAb6B,GAaRC,EAAE,IAAI;AACvBR,MAAAA,GAAG,CAACS,UAAJ,CAAeD,EAAf,EACKE,IADL,CACUC,GAAG,IAAI,KAAKC,iBAAL,EADjB,EAEKC,KAFL,CAEWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGH,KAjB4B;AAAA;;AAK7B;AACAF,EAAAA,iBAAiB,GAAG;AAChBZ,IAAAA,GAAG,CAACiB,QAAJ,GACKP,IADL,CACUC,GAAG,IAAI,KAAKO,QAAL,CAAc;AAAEZ,MAAAA,UAAU,EAAEK,GAAG,CAACQ;AAAlB,KAAd,CADjB,EAEKN,KAFL,CAEWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGH,GAV4B,CAY7B;;;AAOAM,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,SAAS,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,UAAU,EAAE,KAAKf,KAAL,CAAWC,UAApC;AAAgD,MAAA,kBAAkB,EAAE,KAAKC,kBAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADJ;AAQH;;AA5B4B;;AAiCjC,eAAeH,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { Container} from \"../components/Grid\";\r\nimport SavedResult from \"../components/SavedResult\"\r\n\r\nclass SaveBook extends Component {\r\n    state = {\r\n        savedBooks: []\r\n    };\r\n\r\n    //when this component mounts, grab all books that were save to the database \r\n    componentDidMount() {\r\n        API.getBooks()\r\n            .then(res => this.setState({ savedBooks: res.data }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    //function to remove book by id\r\n    handleDeleteButton = id => {\r\n        API.deleteBook(id)\r\n            .then(res => this.componentDidMount())\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid className=\"container\">\r\n                <Jumbotron />\r\n                <Container>\r\n                    <SavedResult savedBooks={this.state.savedBooks} handleDeleteButton={this.handleDeleteButton} />\r\n                </Container>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SaveBook "]},"metadata":{},"sourceType":"module"}